<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Hank 學習筆記]]></title>
  <link href="http://bcswlmpke.github.com/atom.xml" rel="self"/>
  <link href="http://bcswlmpke.github.com/"/>
  <updated>2012-02-04T00:06:19+08:00</updated>
  <id>http://bcswlmpke.github.com/</id>
  <author>
    <name><![CDATA[陳彥任]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[不要相信retainCount，事實上你該怎麼做？]]></title>
    <link href="http://bcswlmpke.github.com/blog/2012/02/03/objective-c-memory-management/"/>
    <updated>2012-02-03T21:29:00+08:00</updated>
    <id>http://bcswlmpke.github.com/blog/2012/02/03/objective-c-memory-management</id>
    <content type="html"><![CDATA[<p>在還沒有擁抱 iOS 5 ARC (Automatic Reference Counting) 之前，
我們必須自己管理程式所使用的記憶體，
在開發 iOS 的過程中踩過不少地雷，
整理出一些心得用來提醒自己，
如果有錯誤也請大家幫忙指正或留言一起討論！</p>

<ul>
<li><strong>產生物件者，記得做對應的 release</strong>

<ul>
<li>new (alloc + init)</li>
<li>retain</li>
<li>copy</li>
</ul>
</li>
<li><strong>addSubView 會將 retainCount +1，有兩種處理的時機</strong></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">UILabel</span> <span class="o">*</span><span class="n">label</span> <span class="o">=</span> <span class="p">[</span><span class="n">UILabel</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithFrame:</span><span class="n">self</span><span class="p">.</span><span class="n">bounds</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">self</span> <span class="nl">addSubView:</span><span class="n">label</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">label</span> <span class="n">release</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">@implementation</span> <span class="nc">MyClass</span>
</span><span class='line'>    <span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">dealloc</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">label</span> <span class="o">!=</span> <span class="nb">nil</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="n">label</span><span class="p">.</span><span class="n">superview</span> <span class="o">!=</span> <span class="nb">nil</span><span class="p">)</span>
</span><span class='line'>                <span class="p">[</span><span class="n">label</span> <span class="n">removeFromSuperview</span><span class="p">];</span>
</span><span class='line'>            <span class="p">[</span><span class="n">label</span> <span class="n">release</span><span class="p">];</span>
</span><span class='line'>            <span class="n">label</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="p">[</span><span class="n">super</span> <span class="n">dealloc</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><strong>Layer 的 Animation 或 setFrame 會暫時的增加 retainCount，直到動作完成</strong></li>
<li><strong>如果你要使用 Thread，請記得用 Autorelease Pool 幫 Thread 做記憶體管理</strong></li>
<li><strong>如果實作的類別要用 Delegate 時，Property 請記得用 assgin，如果用 retain 會造成 Circular Reference</strong></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">@interface</span> <span class="nc">MyClass</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">id</span> <span class="n">target</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span> <span class="n">assgin</span><span class="p">)</span> <span class="kt">id</span> <span class="n">target</span><span class="p">;</span>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><strong>如果 Property 的屬性使用 retain，要記得 release 並設成 nil</strong></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">@interface</span> <span class="nc">MyClass</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">NSString</span> <span class="o">*</span><span class="n">name</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span> <span class="n">retain</span><span class="p">)</span> <span class="n">NSString</span> <span class="o">*</span><span class="n">name</span><span class="p">;</span>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">MyClass</span>
</span><span class='line'><span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">dealloc</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span> <span class="c1">// 等同於 [name release]; name = nil;</span>
</span><span class='line'>
</span><span class='line'>  <span class="p">[</span><span class="n">super</span> <span class="n">dealloc</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>更詳細的說明可以參考官方文件：<a href="https://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/MemoryMgmt/Articles/MemoryMgmt.html" title="About Memory Management">About Memory Management</a></p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[About Objective-C Declared Properties Feature]]></title>
    <link href="http://bcswlmpke.github.com/blog/2012/02/01/objective-c-declared-properties-feature/"/>
    <updated>2012-02-01T21:54:00+08:00</updated>
    <id>http://bcswlmpke.github.com/blog/2012/02/01/objective-c-declared-properties-feature</id>
    <content type="html"><![CDATA[<p>剛開始接觸 iOS 應用程式開發時，
曾經對 @synthesize window = _window 所表達的意義有疑問，
查過資料卻沒記下來，
今天剛好同事問到，
所以這次一定要做一下筆記。</p>

<ul>
<li><strong>Property Declaratoin</strong></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'>  <span class="k">@property</span> <span class="p">(</span><span class="n">attributes</span><span class="p">)</span> <span class="n">type</span> <span class="n">name</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">@interface</span> <span class="nc">MyClass</span> : <span class="nc">NSObject</span>
</span><span class='line'>  <span class="k">@property</span> <span class="kt">float</span> <span class="n">value</span><span class="p">;</span>
</span><span class='line'>  <span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p>@property float value; 相等於</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'>  <span class="o">-</span> <span class="p">(</span><span class="kt">float</span><span class="p">)</span><span class="n">value</span><span class="p">;</span>
</span><span class='line'>  <span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nl">setValue:</span><span class="p">(</span><span class="kt">float</span><span class="p">)</span><span class="n">newValue</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>而 property 的宣告也可以放在 class extensions (也就是 anonymous categories)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'>  <span class="k">@interface</span> <span class="nc">MyClass</span> : <span class="nc">NSObject</span>
</span><span class='line'>  <span class="k">@property</span> <span class="p">(</span><span class="n">retain</span><span class="p">,</span> <span class="n">readonly</span><span class="p">)</span> <span class="kt">float</span> <span class="n">value</span><span class="p">;</span>
</span><span class='line'>  <span class="k">@end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">@interface</span> <span class="nc">MyClass</span><span class="p">()</span> <span class="c1">// Private extension</span>
</span><span class='line'>  <span class="k">@property</span> <span class="p">(</span><span class="n">retain</span><span class="p">,</span> <span class="n">readwrite</span><span class="p">)</span> <span class="kt">float</span> <span class="n">value</span><span class="p">;</span>
</span><span class='line'>  <span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><strong>Property Declaratoin Attributes</strong></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'>  <span class="k">@property</span> <span class="p">(</span><span class="n">attribute</span><span class="p">,</span> <span class="p">[,</span> <span class="n">attribute2</span><span class="p">,</span> <span class="p">...])</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><strong>Accessor Method Names</strong></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'>  <span class="n">getter</span><span class="o">=</span><span class="n">getterName</span>
</span><span class='line'>  <span class="n">setter</span><span class="o">=</span><span class="n">setterName</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><strong>Writability</strong>

<ul>
<li>readwrite</li>
<li>readonly</li>
</ul>
</li>
<li><strong>Setter Semantics</strong>

<ul>
<li>strong</li>
<li>weak (OS X v10.6 and iOS 4 not support)</li>
<li>copy</li>
<li>assign (Default)</li>
<li>retain</li>
</ul>
</li>
<li><strong>Atomicity</strong>

<ul>
<li>nonatomic</li>
<li>atomic (Default)</li>
</ul>
</li>
<li><strong>Property Implementation Directives</strong></li>
</ul>


<p>用 property=ivar 可以指定特別的 instance variable 來讓 property 使用。
不指定的情況如下，@synthesize value; 其實等同於 @synthesize value = value;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'>  <span class="k">@interface</span> <span class="nc">MyClass</span> : <span class="nc">NSObject</span>
</span><span class='line'>  <span class="k">@property</span> <span class="p">(</span><span class="n">copy</span><span class="p">,</span> <span class="n">readwrite</span><span class="p">)</span> <span class="n">NSString</span> <span class="o">*</span><span class="n">value</span><span class="p">;</span>
</span><span class='line'>  <span class="k">@end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">@implementation</span> <span class="nc">MyClass</span>
</span><span class='line'>  <span class="k">@synthesize</span> <span class="n">value</span><span class="p">;</span>
</span><span class='line'>  <span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p>有指定的情況如下：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'>  <span class="k">@implementation</span> <span class="nc">MyClass</span>
</span><span class='line'>  <span class="k">@synthesize</span> <span class="n">firstName</span><span class="p">,</span> <span class="n">lastName</span><span class="p">,</span> <span class="n">age</span><span class="o">=</span><span class="n">yearsOld</span><span class="p">;</span>
</span><span class='line'>  <span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p>age 是用 yearsOld 這個 instance variable 來表示。
所以在 MyClass 內部使用時，可以用 yearsOld 來進行操作，
而其它類別如果使用 MyClass，則可以用 age 這個 property 來進行操作。</p>

<blockquote><p>如果要看更詳細的說明，可以參考官方文件<a href="http://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/ObjectiveC/Chapters/ocProperties.html" title="ocProperties">Declared Properties</a></p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[我的工具箱]]></title>
    <link href="http://bcswlmpke.github.com/blog/2012/01/30/my-toolbox/"/>
    <updated>2012-01-30T22:33:00+08:00</updated>
    <id>http://bcswlmpke.github.com/blog/2012/01/30/my-toolbox</id>
    <content type="html"><![CDATA[<p>最近看到<a href="http://blog.eddie.com.tw/2012/01/04/my-toolbox/" title="高見龍的工具箱">高見龍的工具箱</a>與<a href="http://blog.gasolin.idv.tw/2012/01/blog-post.html?m=1" title="Gasolin的工具箱">Gasolin的工具箱</a>，
於是自己也興起了念頭，整理一下目前自己常用的工具。</p>

<hr />

<ul>
<li><strong>實體工具</strong>

<ul>
<li>Mac Book Pro 13&#8221;</li>
<li>Samsung i9000</li>
</ul>
</li>
<li><strong>我的 MBP 不可缺少的軟體</strong>

<ul>
<li>TotalFinder</li>
<li>Google Chrome

<ul>
<li>Plugins

<ul>
<li>Xmarks</li>
<li>Google Dictionary</li>
<li>VerticalTabs</li>
</ul>
</li>
</ul>
</li>
<li>Adium</li>
<li>Skype</li>
<li>Dropbox</li>
<li>iTerm2</li>
<li>MPlayerX</li>
<li>MacVim

<ul>
<li><a href="https://github.com/bcswlmpke/bcswlmpke-vim" title="Hank's vimrc">我常用的vim plugins</a></li>
</ul>
</li>
<li>Eclipse</li>
<li>XCode</li>
<li>Alfred</li>
<li>無蝦米</li>
</ul>
</li>
<li><strong>我的 i9000 不可缺少的軟體</strong>

<ul>
<li>ES 檔案瀏覽器</li>
<li>Fancy Widget</li>
<li>Quick Settings</li>
<li>Advanced Task Killer</li>
<li>條碼掃描器</li>
<li>RealCalc</li>
<li>SwiFTP</li>
<li>快圖瀏覽</li>
<li>Fast Image View</li>
<li>Adobe Reader</li>
<li>Camera360</li>
<li>Google+</li>
<li>Facebook</li>
<li>噗浪肉骨獸</li>
<li>LINE</li>
<li>海豚瀏覽器</li>
<li>MoboPlayer</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[管理Vim plugins]]></title>
    <link href="http://bcswlmpke.github.com/blog/2012/01/17/vim-setup/"/>
    <updated>2012-01-17T00:19:00+08:00</updated>
    <id>http://bcswlmpke.github.com/blog/2012/01/17/vim-setup</id>
    <content type="html"><![CDATA[<ul>
<li>產生Vim工作目錄

<pre><code>- mkdir bcswlmpke-vim
- cd bcswlmpke-vim
- git init
- touch README
- git add README
- git commit -m 'first commit'
- git remote add origin git@github.com:bcswlmpke/bcswlmpke-vim.git
- git push -u origin master
</code></pre></li>
<li>用 pathogen 來管理 Vim plugin

<ul>
<li>每個 plugin 都獨立安裝在 ~/.vim/bundle 下</li>
<li>每個 plugin 都以 git submodule 的方式來管理，請參考<a href="http://vimcasts.org/episodes/synchronizing-plugins-with-git-submodules-and-pathogen" title="Git submodules and pathogen">Git Submodules and pathogen</a>

<ul>
<li>cd bcswlmpke-vim</li>
<li>touch vimrc</li>
<li>touch gvimrc</li>
<li>ln -s ~/bcswlmpke-vim/vimrc ~/.vimrc</li>
<li>ln -s ~/bcswlmpke-vim/gvimrc ~/.gvimrc</li>
<li>ln -s ~/bcswlmpke-vim ~/.vim</li>
<li>安裝 pathogen，下載 pathogen.vim 放到 .vim/autoload</li>
<li>Activate pathogen, 需要在 .vimrc 加入下列兩行：

<ul>
<li>call pathogen#runtime_append_all_bundles()</li>
<li>call pathogen#helptags()</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>以 Submodule 的方式安裝 plugins

<pre><code>- cd bcswlmpke-vim
- mkdir bundle
- git submodule add https://github.com/fholgado/minibufexpl.vim.git bundle/minibufexpl.vim
</code></pre></li>
<li>安裝 Vim configuraton 到其它電腦

<pre><code>- cd ~
- git clone http://github.com/username/dotvim.git ~/.vim
- ln -s ~/.vim/vimrc ~/.vimrc
- ln -s ~/.vim/gvimrc ~/.gvimrc
- cd ~/.vim
- git submodule init
- git submodule update
</code></pre></li>
<li>升級 plugin bundle

<pre><code>- cd minibufexpl.vim
- git pull origin master
</code></pre></li>
<li>升級所有的 bundled plugins

<pre><code>- git submodule foreach git pull origin master
</code></pre></li>
<li>移除 Submodule

<ul>
<li>砍掉目錄

<ul>
<li>git rm &#8211;cached [要移除的目錄]</li>
<li>rm -rf [要移除的目錄]</li>
</ul>
</li>
<li>修改 .gitmodules

<ul>
<li>將相關內容移除</li>
</ul>
</li>
<li>Commit

<ul>
<li>git add .gitmodules</li>
<li>git commit -m &#8220;Remove submodule xxx&#8221;</li>
</ul>
</li>
<li>Sync

<ul>
<li>git submodule sync</li>
</ul>
</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress的目錄結構]]></title>
    <link href="http://bcswlmpke.github.com/blog/2012/01/14/octopress-directory-structure/"/>
    <updated>2012-01-14T00:21:00+08:00</updated>
    <id>http://bcswlmpke.github.com/blog/2012/01/14/octopress-directory-structure</id>
    <content type="html"><![CDATA[<ul>
<li>octopress/

<ul>
<li>_config.yml 可以做基本設定修改</li>
</ul>
</li>
<li>octopress/plugins

<ul>
<li>放置外掛程式</li>
</ul>
</li>
<li>octopress/source/_posts

<ul>
<li>放置你寫的文章</li>
</ul>
</li>
<li>octopress/source/_includes/asides

<ul>
<li>修改_config.yml -> rake generate 會在這邊產生html檔案</li>
</ul>
</li>
<li>octopress/source/new_page

<ul>
<li>rake new_page[&#8216;new page&#8217;]</li>
</ul>
</li>
<li>octopress/source/_includes/custom/navigation.html

<ul>
<li>修改或加入link</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to use Octopress]]></title>
    <link href="http://bcswlmpke.github.com/blog/2012/01/12/octopress-note/"/>
    <updated>2012-01-12T21:53:00+08:00</updated>
    <id>http://bcswlmpke.github.com/blog/2012/01/12/octopress-note</id>
    <content type="html"><![CDATA[<ul>
<li>安裝

<ul>
<li>請參考<a href="http://octopress.org/docs/setup/" title="Octopress Setup">Octopress官網</a></li>
<li>設定Octopress請參考<a href="http://octopress.org/docs/configuring/" title="Configuring Octopress">Configuring Octopress</a></li>
</ul>
</li>
<li>用 Markdown 寫文章

<ul>
<li>rake new_post[文章名稱]</li>
<li>請參考<a href="http://markdown.tw" title="Markdown Syntax">Markdown中文文件</a></li>
<li>rake generate -> rake preview -> 然後<a href="http://127.0.0.1:4000/">這裡</a>可以看到預覽畫面</li>
</ul>
</li>
<li>發佈

<ul>
<li>git checkout source</li>
<li>git push origin source</li>
<li>rake generate</li>
<li>rake deploy</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
</feed>
